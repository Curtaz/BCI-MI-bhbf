random_seed: 42 # Set it to None to implement fully random behaviour #TODO IMPLEMENT THIS COME ON!

hydra:
  run:
    dir: ${log_path}
 
subj: cBCI_s4 # d6

## Data Processing options
# data_path: "/home/palatella/workspace/Neurorobotics-MI-data/${subj}/preprocessed"
data_path: "/home/palatella/workspace/cBCI-data/sbj4_tr/preprocessed"
output_path: "/home/palatella/workspace//BCI-MI-bhbf/model/${subj}_${now:%Y%m%d_%H%M%S}"
log_path: "/home/palatella/workspace/BCI-MI-bhbf/logs/${subj}_${now:%Y%m%d_%H%M%S}"
sample_frequency: 512
win_size_s: 1
win_shift_s: 0.0625
num_channels: 32 #16
label_map:
  773: 0 # BOTH_HANDS
  771: 1 # BOTH_FEET
  783: 2 # REST
label_names:
  0: "Both Hands" 
  1: "Both Feets" 
  2: "Rest" 
# label_names:
#   0: "Non-rest" 
#   1: "Rest"  
normalize: "zscore" # Data normalization applied at the end of the processing. Available options are "zscore", None

## Model options
TGCN:
  # TGCN Params
  gcn_hidden_dims: [128]
  gcn_output_dim: 16
  gcn_activation: F.leaky_relu
  gru_hidden_units: 128
  gcn_dropout: 0.5
  gru_dropout: 0.3

EEGNET:
  # eegnet params
  conv_dropout: 0.5
  f1: 8
  d: 2
  f2: 16
  embedding_dim: 32

## training options
train:
  pre_trained_model: /home/palatella/workspace/BCI-MI-bhbf/model/cBCI_s4_20240216_164403/model.pt #null
  metric: cosine # one of 'cosine', 'euclidean'
  lr: 0.01
  es_patience: 5
  es_min_delta: 0.0001

  num_epochs: 6
  eval_batch_size: 128

  n_support: 50
  n_query: 60
  n_episodes: 500
  max_grad_norm: 1
  num_classes: 2

  log_interval: 1

  optimizer: 
    class: Adam
    options: 
      lr: 0.01
    
  scheduler:
    class: LinearLR
    options: 
      start_factor: 1
      end_factor: 0.0001
      total_iters: ${num_epochs}

  use_wandb: false
  
  device: "cuda"